Using pygr-draw with alignments (NLMSAs)
----------------------------------------

First, import the necessary components, load the genome/FASTA database in,
and pick two sequences:

 >>> from pygr import seqdb, cnestedlist
 >>> genome = seqdb.BlastDB('example.fa')
 >>> seq1 = genome['chrI']
 >>> seq2 = genome['chrII']

Build an alignment object (a.k.a. "NLMSA"):

 >>> al = cnestedlist.NLMSA('chicago', mode='memory', pairwiseMode=True)

Create some (arbitrary) alignments:

 >>> al += seq1
 >>> al[seq1[50:500]] += seq2[100:550]
 >>> al[seq1[2000:2100]] += seq2[400:500]
 >>> al.build()

Now, import pygr_draw and set it up to produce a png:

 >>> import pygr_draw
 >>> image = pygr_draw.Draw('wrapper-example.png')

In order for pygr_draw to know what to draw, we need to provide a
wrapper to extract drawing information (name, color, etc.) from the
alignment objects returned from the NLMSA; the generic way to do that
is to use a ``SequenceWrapperFactory``:

 >>> from pygr_draw.annotation import SequenceWrapperFactory
 >>> wrapper = SequenceWrapperFactory(color='red')

Add the track as a direct set of features, rather than using 'add_track':

 >>> image.add_feature_map(al, wrapper=wrapper)

You can pass the same track in multiple times with different wrappers,
overriding different attributes, too:

 >>> image.add_feature_map(al, wrapper=SequenceWrapperFactory(name=''))

Now, draw!

 >>> image.save(seq1)

.. image:: wrapper-example.png
