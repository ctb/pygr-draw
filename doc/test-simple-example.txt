A simple test
-------------

First, import the necessary components, load the genome/FASTA database in,
and pick a sequence:

 >>> from pygr import seqdb
 >>> genome = seqdb.BlastDB('example.fa')
 >>> sequence_name = 'chrI'

 >>> import pygr_draw
 >>> from pygr_draw import Annotation

 >>> picture_class = pygr_draw.BitmapSequencePicture
 >>> colors = picture_class.colors 

Create a bunch of overlapping annotations in various colors:

 >>> annotations1 = {}
 >>> annotations1['exon1'] = Annotation('exon1', sequence_name, 0, 500,
 ...                                    color=colors.blue)
 >>> annotations1['exon2'] = Annotation('exon2', sequence_name, 200, 500,
 ...                                    color=colors.green)
 >>> annotations1['exon3'] = Annotation('exon3', sequence_name, 250, 300,
 ...                                    color=colors.black)

Remove the name from one so that you can test drawing w/o a name:

 >>> del annotations1['exon3'].name

Trigger the annoying overlap bug:

 >>> annotations1['test1'] = Annotation('test1', sequence_name, 1000, 1200)
 >>> annotations1['test2'] = Annotation('test2', sequence_name, 1500, 1700)
 >>> annotations1['test3'] = Annotation('test3', sequence_name, 1300, 1400)
 >>> annotations1['test4'] = Annotation('test4', sequence_name, 1350, 1450)

Go past the end:

 >>> annotations1['test5'] = Annotation('test5', sequence_name, 2500, 4200)

Now, convert the annotations into an NLMSA annotations map:

 >>> annotations_map = pygr_draw.create_annotation_map(annotations1, genome)

Draw 'em:

 >>> p = pygr_draw.draw_annotation_maps(genome[sequence_name][:4000],
 ...                                    (annotations_map,),
 ...                                    picture_class=picture_class)

And then save the image:

 >>> image = p.finalize()
 >>> open('test-simple-example.png', 'w').write(image)

.. image:: test-simple-example.png
